Script Linux Ubuntu
https://github.com/andrelukmana/hma_infra.git

git config --global user.name "basuki"
git config --global user.email "rantobasuki@gmail.com"
git config --global core.editor "code --wait"
git config --global diff.tool "default-difftool" 
git config --global difftool.default-difftool.cmd "code --wait --diff \$LOCAL \$REMOTE"
git config --list --show-origin
git config --glob
al core.editor "code --wait"
git config --global core.editor "code --wait"

mkdir latihan01
cd latihan01
git init
git clone https://github.com/andrelukmana/hma_infra.git

===Setting firewall ubuntu===
sudo apt update
sudo apt upgrade
sudo apt install nginx
sudo ufw app list
sudo ufw status
sudo ufw enable
sudo ufw disable
sudo ufw default allow outgoing
sudo ufw default deny incoming
sudo systemctl enable ufw
sudo systemctl disable ufw
sudo ufw allow 'Nginx Full'
sudo ufw allow 'Nginx HTTP'
sudo ufw allow 'Nginx HTTPS'
sudo ufw allow OpenSSH
sudo ufw allow ssh
sudo ufw allow www
sudo ufw allow https
sudo ufw allow ftp
sudo ufw allow 20/tcp
sudo ufw allow 21/tcp
sudo ufw allow 22/tcp
sudo ufw allow 20:22/tcp
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
sudo ufw allow 990/tcp
sudo ufw allow 40000:50000/tcp
sudo iptables -I INPUT -p tcp --dport 80 -j ACCEPT 
sudo iptables -I INPUT -p tcp --dport 443 -j ACCEPT
sudo ufw status
sudo apt list | grep ufw
sudo apt -y install net-tools zip
http://ip-server-kamu
sudo systemctl enable nginx
sudo systemctl disble nginx
sudo systemctl stop nginx
sudo systemctl start nginx
sudo systemctl restart nginx
sudo systemctl reload nginx
sudo systemctl status nginx
service nginx restart
sudo systemctl reload nginx
status systemctl status nginx
curl -4 icanhazip.com
ls /var/www
sudo mkdir -p /var/www/rantobasuki.net
sudo chown -R $USER:$USER /var/www/rantobasuki.net
sudo mkdir -p /var/www/phpmyadmin/
sudo chown -R $USER:$USER /var/www/phpmyadmin/
sudo chown basuki:basuki /var/www/rantobasuki.net/
sudo chown basuki:basuki /var/www/phpmyadmin/
sudo chown root:www-data /etc/phpmyadmin/config-db.php
sudo chown -R www-data:www-data /var/www/rantobasuki.net
sudo chown -R www-data:www-data /var/www/phpmyadmin
sudo chmod -R 755 /var/www
sudo chmod -R 755 /var/www/rantobasuki.net
sudo chmod -R 755 /var/www/phpmyadmin
sudo chown root:www-data /etc/phpmyadmin/config-db.php
sudo echo “Welcome to rantobasuki.net!” > /var/www/test01.net/index2ss.html
sudo nano /var/www/rantobasuki.net/index-backup.html
sudo nano /var/www/rantobasuki.net/info.php
sudo nano /etc/nginx/sites-available/rantobasuki.net
sudo nano /etc/nginx/sites-available/default
sudo nano /etc/nginx/sites-available/phpmyadmin
sudo nano /etc/nginx/conf.d/phpmyadmin.conf
sudo ln -s /etc/nginx/sites-available/rantobasuki.net /etc/nginx/sites-enabled/
sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/
sudo ln -s /etc/nginx/sites-available/phpmyadmin /etc/nginx/sites-enabled/
sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/domain1.com.
sudo ln -s /etc/nginx/sites-available/domain1.com /etc/nginx/sites-enabled/
sudo ln -s /etc/nginx/sites-available/domain2.com /etc/nginx/sites-enabled/
sudo ln -s /usr/share/phpmyadmin /var/www/rantobasuki.net/
sudo ln -s /usr/share/phpmyadmin /var/www/phpMyAdmin
sudo ln -s /usr/share/phpmyadmin /var/www/html
sudo ln -s /usr/share/phpmyadmin /etc/nginx/sites-enabled/
sudo ln -s /usr/share/phpmyadmin /usr/share/nginx/html
sudo nano /etc/nginx/nginx.conf
sudo nano /etc/nginx/conf.d/default.conf
sudo nano /etc/nginx/conf.d/rantobasuki.net.conf (gak urgent tapi perlu dipelajari)
rsync -avz /usr/share/phpmyadmin /var/www/rantobasuki.net
sudo mkdir /usr/share/phpMyAdmin/tmp
sudo chmod 777 /usr/share/phpMyAdmin/tmp
==
sudo ls -l /etc/nginx/sites-enabled//var/www/phpmyadmin
sudo rm /etc/nginx/sites-available/phpmyadmin
sudo rm /etc/nginx/sites-enabled/phpmyadmin
sudo rm /var/www/phpmyadmin/phpMyAdmin
sudo rm /etc/nginx/sites-enabled/default
sudo unlink /etc/nginx/sites-enabled/default
sudo unlink /etc/nginx/sites-enabled/phpmyadmin
sudo ls -l /etc/nginx/sites-enabled/  > untuk cek simbolik link valid
sudo ls -l /etc/nginx/sites-enabled/default
sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default

==
sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/
sudo rm /var/www/rantobasuki.net/html/info.php
sudo nano /etc/php/8.2/fpm/pool.d/www.conf
sudo nano /etc/hosts
sudo nano /etc/hostname
sudo vim /etc/hostname
sudo nginx -t
sudo systemctl restart nginx
sudo systemctl reload nginx
sudo systemctl restart php8.2-fpm  # Sesuaikan dengan versi PHP yang digunakan
sudo apt install apache2-utils
sudo htpasswd -c /etc/nginx/.htpasswd username
sudo chown -R www-data:www-data /usr/share/phpMyAdmin

===Setting virtual host default nginx===
server
{
        listen 80;
        listen [::]:80;
        server_name rantobasuki.net *.rantobasuki.net;
        root /var/www/rantobasuki;
        index index.php index.html index.htm index.nginx-debian.html;

        location / {
                    try_files $uri $uri/ =404;
		    #try_files $uri $uri/ /index.php;
                   }

	location ~ \.php$ {
                           include snippets/fastcgi-php.conf;
                           fastcgi_pass unix:/var/run/php/php8.2-fpm.sock; # Sesuaikan dengan versi PHP Anda
                           fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                           fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                           fastcgi_param DOCUMENT_ROOT $realpath_root;
                           include fastcgi_params;
                          }
 
    	location ~ ^/(doc|sql|setup)/ {
    					deny all;
  				      }

    	location ~ /\.ht {
                          #disable access to hidden files
                          access_log off;
                          log_not_found off;
                          deny all;
                         }
access_log /var/log/nginx/phpmyadmin_access.log;
error_log /var/log/nginx/phpmyadmin_error.log;
}

==
server
{
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name phpmyadmin *.phpmyadmin;
        root /var/www/html;
        index index.php index.html index.htm index.nginx-debian.html;

        location / {
                    try_files $uri $uri/ =404;
                    #try_files $uri $uri/ /index.php;
                   }

        location ~ \.php$ {
                           include snippets/fastcgi-php.conf;
                           fastcgi_pass unix:/var/run/php/php8.2-fpm.sock; # Sesuaikan dengan versi PHP Anda
                           fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                           fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                           fastcgi_param DOCUMENT_ROOT $realpath_root;
                           include fastcgi_params;
                          }

        location ~ ^/phpmyadmin/(.*\.php)$ {
                                            root /var/www/html;
                                            index index.php index.html index.htm index.nginx-debian.html;
                                            include snippets/fastcgi-php.conf;
                                            fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;  # Sesuaikan dengan versi PHP yang Anda gunakan
                                            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                                            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                                            fastcgi_param SCRIPT_FILENAME /usr/share/phpmyadmin/$1;
                                            fastcgi_param DOCUMENT_ROOT $realpath_root;
                                            include fastcgi_params;
                                           }
	location ~ /\.ht {
                          deny all;
                         }

        location ~ ^/phpmyadmin/(.*\.conf)$ {
                                             deny all;
                                            }
}

===Setting file index html===
<html>
    <head>
        <title>Latihan Website</title>
    </head>
    <body>
        <center><h1>Ranto Basuki selalu SEHAT, BERHASIL & SUKSES</h1></center>
    </body>
</html>
===
http {
    ...
    server_names_hash_bucket_size 64;
    ...
}
===
<?php
phpinfo();
?>
===
<VirtualHost *:80>
     ServerAdmin admin@app_one.test
     ServerName app_one.test
     DocumentRoot /var/www/app_one.test
     DirectoryIndex index.php

     <Directory /var/www/app_one.test>
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        Order allow,deny
        allow from all
     </Directory>

    <FilesMatch \.php$>
        # From the Apache version 2.4.10 and above, use the SetHandler to run PHP as a fastCGI process server
         SetHandler "proxy:unix:/run/php/php7.4-fpm.sock|fcgi://localhost"
    </FilesMatch>

     ErrorLog ${APACHE_LOG_DIR}/app_one.test_error.log
     CustomLog ${APACHE_LOG_DIR}/app_one.test_access.log combined
</VirtualHost>
===Setting hak akses ke folder virtual host===
visudo
nama_user ALL=(ALL) ALL
Katakanlah Anda ingin mengizinkan user untuk menjalankan perintah sudo tanpa diminta kata sandi. Untuk melakukan itu, buka file /etc/sudoers:
visudo
Gulir ke bawah ke akhir file dan tambahkan baris berikut:
namapengguna  ALL=(ALL) NOPASSWD:ALL
Contoh lainnya adalah mengizinkan pengguna untuk menjalankan hanya perintah tertentu melalui sudo. Misalnya, untuk mengizinkan hanya perintah mkdir dan rmdir , Maka perintah yang akan Anda gunakan:
namapengguna ALL=(ALL) NOPASSWD:/bin/mkdir,/bin/rmdir
Alih-alih mengedit file sudoers, Anda dapat melakukan hal yang sama dengan membuat file baru dengan aturan otorisasi di direktori /etc/sudoers.d. Tambahkan aturan yang sama dengan yang Anda tambahkan ke file sudoers:
echo "username  ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/username

===Mengganti nama host ubuntu22.04===
hostnamectl
sudo hostnamectl set-hostname ubuntu22
sudo nano /etc/hosts
sudo nano /etc/hostname

===Install & Setting GIT===
git config --global user.name "Ranto Basuki"
git branch -m Ranto Basuki


===Mencari file & data===
sudo find /tmp -type f -delete
sudo find /tmp -exec rm -rf {} + (*hati2 pakainya)
sudo find /tmp -type f -mtime +7 -exec rm {} \;
find . -type f -newermt 2020-01-01 -not -newermt 2020-03-31 -ls
find . -type f -newerat 2020-01-01 -not -newerat 2020-03-31 -ls
find /home/hary -type f -atime -30 -type f
find ~ -type f -mtime +30 -type f -ls
-perm untuk mencari file/direktori berdasarkan permission
-user mencari file/direktori berdasarkan kepemilikan file
-group mencari file/direktori berdasarkan kepemilikan group
find / -perm 777 -type d
find / -user hary 
find / -group root 
find / -size +100M -iname "*.log.*" 2>&1 | grep -v "Permission denied"
$ sudo find nama_folder/ -type d -exec chmod 755 {} \;
$ sudo find nama_folder/ -type f -exec chmod 644 {} \;
find / -name php.ini
find / -name phpMyAdmin-latest-all-languages.zip
find / -type d -iname "var"
find / -size +50M
find / -size -1G -iname *.log
find /path/to/directory -type f -atime +30 -exec rm {} \;
systemctl list-units | grep php
find /path/to/directory -type f -atime +30 -exec rm {} \;
==kron==
$ crontab -e
0 10 * * * sudo find /tmp -type f -delete >/dev/null 2>&1
0 10 * * * sudo /home/ubuntu/clear_temp.sh >/dev/null 2>&1
==
sudo find /tmp -exec rm -rf {} +
sudo journalctl --vacuum-time=7d
du -sh /var/log/*
sudo df /tmp
sudo df -h /tmp
sudo du -sh /tmp
sudo rm /var/log/*.log
sudo tree /tmp
sudo tree -- du -h /tmp
===Cek versi===
cat /etc/lsb-release
php -v
apache2 -v

===Setting login ssh dengan akun root===
sudo nano /etc/ssh/sshd_config
PermitRootLogin no
sudo sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin no/' 
PasswordAuthentication yes.
ssh root@192.168.1.12
sudo systemctl restart sshd

===Setting format waktu===
sudo timedatectl set-timezone Asia/Jakarta
sudo timedatectl
sudo timedatectl list-timezones

===Instal php versi 8.2 dengan web server nginx & phpMyAdmin di ubuntu===
sudo apt update && sudo apt upgrade -y
sudo apt install software-properties-common -y 
sudo apt-cache policy software-properties-common
sudo add-apt-repository ppa:ondrej/php
sudo apt install php8.2 
sudo apt install php8.2-fpm -y
sudo apt install php8.3-fpm php-mysql
sudo apt-get install php8.2 php8.2-fpm php8.2-mysql
sudo apt install php8.3-fpm php8.3-mysql -y
sudo nano /etc/php8.2/fpm/php.ini
cgi.fix_pathinfo=0
sudo service php8.2-fpm restart
sudo service php8.2-fpm status
sudo apt install php php-cli php-fpm php-json php-common php-mysql php-zip php-gd php-mbstring php-curl php-xml php-pear php-bcmath
sudo apt install php8.1-fpm php8.1-common php8.1-mysql php8.1-xml php8.1-curl php8.1-gd php8.1-imagick php8.1-cli php8.1-dev php8.1-imap php8.1-mbstring php8.1-opcache php8.1-soap php8.1-zip -y
sudo apt install php8.2 php8.2-cli php8.2-fpm php8.2-mysql php8.2-xml php8.2-json php8.2-common php8.2-gd php8.2-mbstring php8.2-curl php8.2-zip php8.2-pear php8.2-bcmath
sudo apt install php8.2-common php8.2-mysphp8.2-xml php8.2-xmlrpc php8.2-curl php8.2-gd php8.2-imagick php8.2-cli php8.2-dev php8.2-imap php8.2-mbstring php8.2-opcache 
sudo apt install -y php8.2 php8.2-fpm php8.2-bcmath php8.2-xml php8.2-mysql php8.2-zip php8.2-intl php8.2-ldap php8.2-gd php8.2-cli php8.2-bz2 php8.2-curl php8.2-mbstring php8.2-imagick php8.2-tokenizer php8.2-opcache php8.2-redis php8.2-cgi
sudo apt install php8.2-{common,fpm,mysql,curl,gd,imagick,bcmath,cli,intl,mbstring,soap,xml,zip,cgi} -y
sudo apt install php8.2-common php8.2-fpm php8.2-mysql php8.2-curl php8.2-gd php8.2-imagick php8.2-bcmath php8.2-cli php8.2-intl php8.2-mbstring php8.2-soap php8.2-xml php8.2-zip php8.2-cgi -y
sudo apt install php-fpm php-mysql php-json php-xml php-zip php-mbstring php-curl php-bcmath -y
sudo apt install phpmyadmin -y
==Untuk lokasi file konfigurasi PHP terdapat pada:==
PHP CLI: /etc/php/8.2/cli/php.ini
PHP-FPM: /etc/php.8.2/fpm/php.ini
==
wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.zip
wget -c https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-english.tar.gz
sudo apt install unzip
tar -xzvf phpMyAdmin-5.2.1-english.tar.gz
unzip phpMyAdmin-latest-all-languages.zip
rm phpMyAdmin-5.2.1-english.tar.gz
sudo mkdir -p /var/www/
sudo mv phpMyAdmin-5.2.0-all-languages /var/www/phpmyadmin
sudo mv phpMyAdmin-5.2.1-english /usr/share/phpmyadmin
sudo chown -R www-data:www-data /var/www/phpMyAdmin
==
sudo mv phpMyAdmin-5.2.0-all-languages /var/www/phpmyadmin
sudo apt install phpmyadmin php-mbstring php-zip php-gd php-json php-curl
sudo systemctl enable php8.2-fpm
sudo systemctl start php8.2-fpm
sudo systemctl status php8.2-fpm
sudo service php8.2-fpm restart
sudo apt install phpmyadmin -y
sudo cd /etc/nginx/conf.d
sudo nano /etc/php/8.2/fpm/php.ini
sudo nano  /var/www/html/info.php
sudo nano /etc/php/8.1/fpm/conf.d/60-custom.ini
echo "<?php phpinfo(); ?>" | sudo tee /usr/share/nginx/html/info.php
echo "ini halaman gnulinux.io" > gnulinux.io/index.html
sudo a2disconf phpMyAdmin
sudo a2disconf php8.1-fpm # When upgrading from an older PHP version
sudo dpkg-reconfigure phpMyAdmin
sudo nano /etc/php/8.2/fpm/php.ini
ls -al /etc/php/8.2/fpmql 
/usr/share/phpMyAdmin
/etc/phpmyadmin/config.inc.php
sudo nano /var/www/rantobasuki.net/koneksi2.php
==
<?php
$server = "localhost";
$username = "root";
$password = "P@ssw0rd1";
$database = "db_test";

$conn = new mysqli($server, $username, $password, $database);
if ($conn->connect_error)
{
die("Connection Failed: " .$conn->connect_error);
}
echo "Connected Sucessfully !";
?>
==
tail -f /var/log/nginx/error.log
sudo nano/etc/php/8.1/fpm/php.ini
dispaly_error yes
php --modules | grep MySQL
systemctl status php8.1-fpm
ps aux | grep php-fpm
netstat -an | grep :9000
nmap localhost -p 9000
/etc/init.d/php5-fpm status
service php8.2-fpm status
service php7.0-fpm status | grep running
==
upload_max_filesize = 10M
post_max_size = 10M
max_execution_time = 3600
max_input_time = 300
memory_limit = 512M 

===Instal MySQL===
sudo apt install mysql-server
sudo apt-get install mysql-server 
sudo mysql_secure_installation
sudo systemctl enable MySQL
sudo systemctl start MySQL
sudo systemctl status MySQL
sudo systemctl status mysql.service
sudo systemctl enable MySQL
systemctl start mysql
systemctl stop MySQL
systemctl restart mysql
sudo apt install php8.2-fpm php-MySQL
use mysql;
mysqldump -u root -p db_test > /var/www/dbtest-backup.sql  (backup)
mysqldump -u root -p kb > /root/backup/kbbackup.sql  (backup)
mysqldump -u root -p  namadatabase > database.sql
mysqldump -u username -p --all-databases > /var/www/dbtest-backup.sql
mysqldump -u username -p -A > cadangan.sql
mysqldump -u username -p --all-databases --no-data > cadangan.sql
mysqldump -u username -p -A -d > cadangan.sql
mysqldump -u root -p --databases database1 database2 database3 > /root/backup/multi_database.sql  (backup)
mysql -u root -p database_saya < /root/backup/database_saya.sql (restore)
mysql -u username -p < cadangan.sql  (restore)
mysql -u username -p db_name < cadangan.sql
mysql -u root -p namadatabase < database.sql
mysql -u root -p kb < /root/backup/kbbackup.sql (restore)
SELECT user, authentication_string, plugin FROM mysql.user;
CREATE DATABASE namadatabase DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;
CREATE DATABASE phpmyadmin DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER 'example_user'@'%' IDENTIFIED WITH mysql_native_password BY 'password';
CREATE USER 'admin'@'localhost' IDENTIFIED BY 'P@ssw0rd3';
CREATE USER 'basuki'@'localhost' IDENTIFIED BY 'Basuki123';
CREATE USER 'ranto'@'localhost' IDENTIFIED BY 'Ranto123';
CREATE USER 'stefanus'@'localhost' IDENTIFIED BY 'Stefanus123';
CREATE USER 'ignatius'@'%' IDENTIFIED BY 'Ignatius123';
CREATE USER 'test'@'%' IDENTIFIED BY 'test@123';
CREATE USER 'root'@'localhost' IDENTIFIED BY 'P@ssw0rd1';
CREATE USER 'phpmyadmin'@'localhost' IDENTIFIED BY 'P@ssw0rd2';
CREATE USER 'phpmyadmin'@'localhost' IDENTIFIED BY 'supersecretpassword';
create user admin@localhost identified by 'your-chosen-password';
CREATE USER 'sammy'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'password';
SET PASSWORD FOR 'phpmyadmin'@'localhost' = PASSWORD([copy and paste the password here])
SET PASSWORD FOR nama_user@'lokasi_user' = PASSWORD('password_baru');
SET PASSWORD FOR 'nama_user'@'lokasi_user' ='*nilai hashing';
ALTER USER 'sammy'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';
ALTER USER 'tutorial'@'localhost' IDENTIFIED BY 'p4ssw0rd-b4ru';
ALTER USER 'root'@'localhost' IDENTIFIED BY 'P@ssw0rd1';
ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'your_new_password';
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';
ALTER USER 'phpmyadmin'@'localhost' IDENTIFIED BY 'P@ssw0rd2';
alter user 'root'@'localhost' identified with mysql_native_password by 'P@ssw0rd1';
ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'password';
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password by 'your_new_password';
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password by 'your_new_password';
ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'your_new_password';s
SET PASSWORD FOR 'phpmyadmin'@'localhost' = PASSWORD('P@ssw0rd');
SET PASSWORD FOR 'phpmyadmin'@'localhost' = PASSWORD('supersecretpassword');
SET PASSWORD FOR 'root'@'localhost' = PASSWORD('RunCloud_password');
FLUSH PRIVILEGES;
GRANT ALL PRIVILEGES ON *.* TO 'sammy'@'localhost' WITH GRANT OPTION;
GRANT ALL ON phpmyadmin.* TO 'phpmyadmin'@'localhost' IDENTIFIED BY 'your_preferred_password';
GRANT ALL PRIVILEGES ON example.* TO 'nama user'@'%'
GRANT ALL PRIVILEGES ON *.* TO 'admin'@'localhost' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'basuki'@'localhost' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON db_test.* TO 'ranto'@'localhost';
GRANT ALL PRIVILEGES ON *.* TO 'basuki'@'%';
GRANT ALL PRIVILEGES ON *.* TO 'basuki'@'%' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'phpmyadmin'@'localhost' WITH GRANT OPTION;
GRANT CREATE, ALTER, DROP, INSERT, UPDATE, INDEX, DELETE, SELECT, REFERENCES, RELOAD ON *.* TO 'sammy'@'localhost' WITH GRANT OPTION;
GRANT CREATE, ALTER, DROP, INSERT, UPDATE, INDEX, DELETE, SELECT, REFERENCES ON  `prefix\_%` . * TO  'username'@'localhost' WITH GRANT OPTION;
grant all privileges on *.* to admin@localhost with grant option;
GRANT ALL ON example_database.* TO 'example_user'@'%';
GRANT CREATE, SELECT ON * . * TO 'user_name'@'localhost';
GRANT ALL ON namadatabase.* TO 'userdatabase'@'localhost';
GRANT ALL PRIVILEGES ON newdatabase.* TO 'newuser'@'localhost';
FLUSH PRIVILEGES;
SHOW GRANTS FOR 'user_name'@'localhost';
REVOKE PERMISSION_TYPE ON database_name.table_name FROM ‘user_name’@‘localhost’;
REVOKE ALL PRIVILEGES ON * . * FROM 'user_name'@'localhost';
DROP USER ‘user_name’@‘localhost’;
==Reset Password Root MySQL
sudo /etc/init.d/mysql stop
sudo mkdir -v /var/run/mysqld && sudo chown mysql /var/run/mysqld
sudo mysqld — skip-grant-tables — user=root &
UPDATE mysql.user SET Password = PASSWORD(‘PasswordBaruku’) WHERE User = ‘root’;
FLUSH PRIVILEGES;
exit;
UPDATE user SET authentication_string=password('YOURNEWPASSWORD') WHERE user='root';
ALTER USER ‘root’@’localhost’ IDENTIFIED BY ‘PasswordBaruku’;
==
mysqldump -u root -p  namadatabase > database.sql (Export database)
mysql -u root -p namadatabase < database.sql (Import database)
SET PASSWORD FOR 'root'@'localhost' = PASSWORD('new_password');
SELECT user, authentication_string, plugin FROM mysql.user;
SELECT User, Host FROM mysql.user;
SELECT user, host FROM mysql.user; 
SELECT DISTINCT User FROM mysql.user;
SELECT user, authentication_string, plugin FROM mysql.user;
SHOW GRANTS FOR 'user'@'host';
FLUSH PRIVILEGES;
mysql -u USER -p'PASSWORD' -h HOST -P 3306 -D DATABASE
mysql -u gen_user -p'sU}NEyx#<2P~\e' -h 91.206.179.29 -P 3306 -D default_db
mysqldump -u root -pP@ssw0rd1 db_test > just_dump2.sql;
mysqldump -u root -pP@ssw0rd1 -h 192.168.5.108 -P 3306 db_test > just_dump1.sql
mysqldump -u root -p'P@ssw0rd1' -h 192.168.5.108 -P 3306 db_test --all-databases --no-tablespaces --set-gtid-purged=OFF --single-transaction > just_dump3.sql
sudo systemctl start mysql.service
==Script koneksi ke database mysql==
nano /var/www/rantobasuki.net/koneksi.php
<?php
$user = "root";
$password = "P@ssw0rd1";
$database = "db_test";
$table = "t_user";
try {
  $db = new PDO("mysql:host=localhost;dbname=$database", $user, $password);
  echo "<h2>TODO</h2><ol>"; 
  foreach($db->query("SELECT nama FROM $table") as $row) {
    echo "<li>" . $row['nama'] . "</li>";
  }
  echo "</ol>";
} catch (PDOException $e) {
    print "Error!: " . $e->getMessage() . "<br/>";
    die();
}
?>
sudo mysql < /usr/share/phpMyAdmin/sql/create_tables.sql -u root -p
CREATE USER 'pmauser'@'localhost' IDENTIFIED BY 'P@ssw0rd4';
GRANT ALL PRIVILEGES ON phpmyadmin.* TO 'pmauser'@'localhost' WITH GRANT OPTION;
FLUSH PRIVILEGES;
EXIT;
==
#mysql -u jaguard -p nama_database < /var/www/html/--> lokasi file yang anda upload
sudo systemctl start mysql.service
apt update && sudo apt upgrade y
apt install dirmngr ca-certificates software-properties-common apt-transport-https wget
sudo apt install wget -y
sudo mysql -u root -p
CREATE DATABASE namadatabase;
use namadatabase;
#import database
sudo wget https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb
sudo dpkg -i mysql-apt-config_0.8.22-1_all.deb
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29
apt-get update
sudo dpkg -i mysql-{common,community-client-plugins,community-client-core,community-client,client,community-server-core,community-server,server}_*.deb
gpg --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29
gpg --export --armor 467B942D3A79BD29 | sudo gpg --dearmour -o 
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29
sudo apt-cache policy mysql-server
sudo apt install -f mysql-client=5.7* mysql-community-server=5.7* mysql-server=5.7*
sudo apt-key list | grep -A 1 expired
sudo apt-key adv --keyserver keys.gnupg.net --recv-keys 5072E1F5
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29
sudo apt install -f mysql-client=5.7* mysql-community-server=5.7* mysql-server=5.7*
sudo systemctl status mysql.service
sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf
sudo systemctl start mysql
sudo apt update --allow-insecure-repositories
sudo mysqladmin -p -u sammy version
systemctl status mysql --no-pager -l
mysqldump -u root -p  namadatabase > database.sql
mysql -u root -p namadatabase < database.sql
systemctl stop mysql
systemctl start mysql
systemctl restart MySQL

SHOW VARIABLES LIKE 'validate_password%';
SET GLOBAL validate_password.policy=LOW;
SET GLOBAL validate_password.length =6;
SET GLOBAL validate_password.number_count = 0;
SELECT VALIDATE_PASSWORD_STRENGTH('weak');
FLUSH PRIVILEGES;
mysql> FLUSH PRIVILEGES; 
/etc/mysql/mysql.conf.d/mysqld.cnf 
sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf  
bind-address = 0.0.0.0 
sudo systemctl restart mysql.service
sudo systemctl start mysql.service 
sudo systemctl stop mysql.service
groupadd mysql
useradd -g mysql mysql 
#Extract MySQL yang telah didownload dan pindahkan ke folder /usr/local.
tar xzvf mysql-5.5.62-linux-glibc2.12-x86_64.tar.gz
mv mysql-5.5.62-linux-glibc2.12-x86_64 /usr/local/mysql
cd /usr/local/mysql
chown -R mysql:mysql *
apt install libaio1 
scripts/mysql_install_db --user=mysql	
cp support-files/my-medium.cnf /etc/my.cnf
bin/mysqld_safe --user=mysql &
cp support-files/mysql.server /etc/init.d/mysql.server
bin/mysqladmin -u root password 'rahasia'
ln -s /usr/local/mysql/bin/mysql /usr/local/bin/mysql	
reboot
update-rc.d -f mysql.server defaults
/etc/init.d/mysql.server start
/etc/init.d/mysql.server status
mysql -u root -p	
sudo MySQL
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';
exit
sudo mysql_secure_installation
mysql --version
sudo apt-get remove --purge mysql*
sudo apt-get purge mysql*
sudo apt-get autoremove
sudo apt-get autoclean
sudo apt-get dist-upgrade
sudo systemctl status MySQL
CREATE TABLE t_user (
    id int auto_increment primary key,
    nama varchar(25),
    tgl_lahir date,
    alamat varchar(100),
    phone varchar(15)
);

===Instal phpMyAdmin dengan web server nginx pada server ubuntu 22.04===
sudo apt update
sudo apt -y install phpmyadmin
sudo apt install phpmyadmin -y
sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin
sudo nano /etc/nginx/sites-available/default
sudo nano /etc/nginx/sites-available/phpmyadmin
sudo ln -s /etc/nginx/sites-available/phpmyadmin /etc/nginx/sites-enabled/
sudo chown www-data:www-data -R /var/lib/phpmyadmin/
sudo chown root:www-data /etc/phpmyadmin/config-db.php
sudo ln -s /usr/share/phpmyadmin /var/www/rantobasuki.net/phpMyAdmin
sudo ln -s /usr/share/phpmyadmin /var/www/html/phpMyAdmin (digunakan untuk yang tidak pakai domain jadi mengarah ke root default nginx)
sudo ln -s /usr/share/phpmyadmin /var/www/html/phpMyAdmin
sudo ln -s /usr/share/phpmyadmin /var/www/html
sudo nano /etc/nginx/sites-available/default
Selanjutnya, aktifkan file virtual host phpmyadmin dengan melakukan symlink ke sites-enabled dan hapus file virtual host default dengan perintah berikut:
sudo rm -rf /etc/nginx/sites-enabled/default
sudo ln -s /etc/nginx/sites-available/phpmyadmin.conf /etc/nginx/sites-enabled/
==
nano /etc/php/8.2/fpm/php.ini
;cgi.fix_pathinfo=1 menjadi cgi.fix_pathinfo=0
nano /etc/php/8.2/cli/php.ini
;cgi.fix_pathinfo=1 menjadi cgi.fix_pathinfo=0
sudo ln -s /usr/share/phpmyadmin /var/www/html/phpMyAdmin
sudo ln -s /usr/share/phpmyadmin /var/www/phpMyAdmin
nano /etc/nginx/sites-available/rantobasuki.net
systemctl enable mysql
systemctl start MySQL
mysql_secure_installation
systemctl status mysql
systemctl enable php8.2-fpm
systemctl start php8.2-fpm
systemctl status php8.2-fpm

==
server {
        listen 80 default_server;
        listen [::]:80 default_server;
        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm index.nginx-debian.html;

        # ganti dengan server IP, misal 123.456.78.90
        server_name gantidenganserverip;

        location ~ \.php$ {
           include snippets/fastcgi-php.conf;
           fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
           fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
           include fastcgi_params;
       }
}

==
server 
{
  listen 80;
  listen [::]:80;
  server_name rantobasuki.net;
  root /var/www/phpmyadmin/;
  index index.php index.html index.htm index.nginx-debian.html;

  location / {
    try_files $uri $uri/ /index.php;
  }

  location ~ \.php$ {
    fastcgi_pass unix:/run/php/php8.2-fpm.sock;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
    include snippets/fastcgi-php.conf;
  }

 # A long browser cache lifetime can speed up repeat visits to your page
  location ~* \.(jpg|jpeg|gif|png|webp|svg|woff|woff2|ttf|css|js|ico|xml)$ {
       access_log        off;
       log_not_found     off;
       expires           360d;
  }

  # disable access to hidden files
  location ~ /\.ht {
      access_log off;
      log_not_found off;
      deny all;
  }
}
==
ln -s /etc/nginx/sites-available/rantobasuki.net /etc/nginx/sites-enabled/
sudo unlink /etc/nginx/sites-enabled/default
nginx -t
systemctl reload nginx
CREATE USER 'pmauser'@'%' IDENTIFIED BY 'p4ssw0rd123';
GRANT ALL PRIVILEGES ON *.* TO 'pmauser'@'%' WITH GRANT OPTION;
==
wget https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-all-languages.tar.gz
wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.zip
sudo apt install unzip
tar -xzvf phpMyAdmin-5.2.1-english.tar.gz
tar -zxvf phpMyAdmin-5.2.1-all-languages.tar.gz
unzip phpMyAdmin-latest-all-languages.zip
rm phpMyAdmin-5.2.1-english.tar.gz
sudo mv phpMyAdmin-5.2.1-english /usr/share/phpmyadmin
sudo mv phpMyAdmin-5.2.0-all-languages /var/www/phpMyAdmin
sudo chown -R www-data:www-data /var/www/phpmyadmin
sudo mv phpMyAdmin-5.2.1-all-languages /usr/share/phpMyAdmin
sudo mv /usr/share/phpmyadmin/config.sample.inc.php /usr/share/phpmyadmin/config.inc.php
sudo nano /etc/nginx/conf.d/phpmyadmin.conf
sudo nano /etc/nginx/sites-available/phpmyadmin.conf
sudo apt install phpmyadmin php-mbstring php-zip php-gd php-json php-curl -y
sudo phpenmod mbstring
sudo nano /etc/nginx/sites-available/default

==
server {
    listen 80;

    server_name example.com;

    root /usr/share/phpmyadmin;
    index index.php;

    location / {
        try_files $uri $uri/ =404;
    }

    location ~ ^/(.+\.php)$ {
        include fastcgi_params;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock; # Sesuaikan dengan versi PHP Anda
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location ~ /\.ht {
        deny all;
    }
}

==
server {
        listen 80 default_server;
        listen [::]:80 default_server;
        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm index.nginx-debian.html;

        # ganti dengan server IP, misal 123.456.78.90
        server_name gantidenganserverip;

        location ~ \.php$ {
           include snippets/fastcgi-php.conf;
           fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
           fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
           include fastcgi_params;
       }
}
==

location /phpmyadmin {
    root /usr/share;
    index index.php index.html index.htm;
    location ~ ^/phpmyadmin/(.+\.php)$ {
        try_files $uri =404;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;  # Sesuaikan dengan versi PHP yang digunakan
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /usr/share/phpmyadmin/$1;
        include fastcgi_params;
    }
    location ~* \.phps$ {
        deny all;
    }
}

==
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	root /var/www/html;

	index index.php index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		try_files $uri $uri/ =404;
	}

	location ~ \.php$ {
		try_files $fastcgi_script_name =404;
		include fastcgi_params;
		fastcgi_pass unix:/run/php/php8.3-fpm.sock;
		fastcgi_index index.php;
		fastcgi_param DOCUMENT_ROOT $realpath_root;
		fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
	}
}

server {
    listen 80;
    server_name your_domain_or_ip;  # Ganti dengan domain atau IP server

    root /usr/share/phpmyadmin;
    index index.php;

    location / {
        try_files $uri $uri/ =404;
    }

    location ~ ^/phpmyadmin/.*\.php$ {
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;  # Sesuaikan dengan versi PHP yang terinstal
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }
}


==sudo rm -rf /etc/nginx/sites-enabled/default
sudo ln -s /etc/nginx/sites-available/phpmyadmin.conf /etc/nginx/sites-enabled/

$cfg['blowfish_secret'] = 'CfX1la/aG83gx1{7rADus,iqz8RzeV8x';
/**
 * phpMyAdmin configuration storage settings.
 *
 * User used to manipulate with storage */
$cfg['Servers'][$i]['controlhost'] = 'localhost';
// $cfg['Servers'][$i]['controlport'] = '';
$cfg['Servers'][$i]['controluser'] = 'username';
$cfg['Servers'][$i]['controlpass'] = 'password_username';
==
sudo htpasswd -c /etc/phpMyAdmin/.htpasswd pmadmin
sudo htpasswd /etc/phpMyAdmin/.htpasswd adminlain > untuk pengguna tambahan
sudo nano /etc/httpd/conf.d/phpMyAdmin.conf
==
<Directory /usr/share/phpmyadmin>
    Options  +FollowSymLinks +Multiviews +Indexes  # edit this line
    DirectoryIndex index.php

    AllowOverride None
    AuthType basic
    AuthName "Authentication Required"
    AuthUserFile /etc/phpmyadmin/.htpasswd
    Require valid-user

    <IfModule mod_php5.c>
    ...
==
sudo systemctl restart httpd
sudo mysql < /usr/share/phpmyadmin/sql/create_tables.sql -u root -p
sudo nano /etc/nginx/sites-available/phpMyAdmin
sudo mkdir /usr/share/phpmyadmin/tmp
sudo chmod 777 /usr/share/phpmyadmin/tmp
sudo chown -R www-data:www-data /usr/share/phpmyadmin
sudo systemctl restart nginx php8.2-fpm
sudo nano /etc/nginx/conf.d/phpmyadmin.conf
sudo ln -s /etc/nginx/sites-available/phpmyadmin /etc/nginx/sites-enabled/
sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin
sudo nginx -t
sudo a2ensite your_domain
sudo a2dissite 000-default
sudo apache2ctl configtest
sudo systemctl reload nginx
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
sudo certbot --nginx -d rantobasuki.net
sudo certbot renew --dry-run
nano /etc/php8.2/fpm/php.ini
===Hapus folder, file temporary, php, phpMyAdmin, MySQL & apache2===
sudo systemctl stop php8.2-fpm
sudo apt purge php8.2
sudo apt-get purge php* php-fpm
sudo apt-get remove --purge php*
sudo apt-get remove php
sudo apt-get autoremove
sudo apt-get autoremove --purge
sudo apt-get autoclean
sudo apt-get clean
ls /tmp
ls -la /tmp
df -h /tmp
sudo rm -rf * (*dijalankan dalam folder tmp)
sudo rm -rf /tmp
sudo rm -rf /tmp/*
sudo rm -rf ~/.cache/*
rm -rf ~/.cache/thumbnails/*
sudo apt-get clean
sudo apt-get autoclean
sudo apt-get install localpurge
sudo systemctl stop apache2
sudo service apache2 stop
sudo systemctl stop nginx
sudo apt-get remove apache2
sudo apt-get remove --purge php7.4-cli php7.4-fpm php7.4-mysql php7.4-xml php7.4-curl
sudo apt purge php* -y
sudo apt remove php8.2-*
sudo apt purge php8.2*
sudo apt clean
sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common
sudo apt-get --purge remove apache2 apache2-utils apache2-bin apache2.2-common
sudo rm -rf /etc/php
sudo rm -rf /etc/apache2
....
sudo find /tmp -type f -delete
sudo find /tmp -type f -delete
sudo find /tmp -exec rm -rf {} + (*hati2 pakainya)
sudo find /tmp -type f -mtime +7 -exec rm {} \;
sudo apt purge php8.0*
sudo apt autoclean
sudo apt autoremove
find . -type f -newermt 2020-01-01 -not -newermt 2020-03-31 -ls
find . -type f -newerat 2020-01-01 -not -newerat 2020-03-31 -ls
find /home/hary -type f -atime -30 -type f
find ~ -type f -mtime +30 -type f -ls
-perm untuk mencari file/direktori berdasarkan permission
-user mencari file/direktori berdasarkan kepemilikan file
-group mencari file/direktori berdasarkan kepemilikan group
find / -perm 777 -type d
find / -user hary 
find / -group root 
find / -size +100M -iname "*.log.*" 2>&1 | grep -v "Permission denied"
sudo find /tmp -exec rm -rf {} +
sudo journalctl --vacuum-time=7d
du -sh /var/log/*
sudo df /tmp
sudo df -h /tmp
sudo du -sh /tmp
sudo rm /var/log/*.log
locate php.ini
locate -i php.INI
locate -c -i php.ini
sudo find /var/log -type f -delete
ls -lh /tmp
$ sudo find nama_folder/ -type d -exec chmod 755 {} \;
$ sudo find nama_folder/ -type f -exec chmod 644 {} \;
rm -d	Menghapus direktori kosong menggunakan perintah rm.
rm -r	Menghapus direktori yang tidak kosong dan isinya.
rm -f	Mengabaikan prompt apa pun saat menghapus file yang dilindungi untuk penulisan (write-protected).
rm -rf	Mengabaikan prompt apa pun saat menghapus folder tidak kosong yang dilindungi untuk penulisan.
rm -i	Menghasilkan prompt sebelum menghapus setiap file.
rm -I	Menghasilkan prompt hanya sekali sebelum menghapus lebih dari tiga file.
rm *	Wildcard yang mewakili banyak karakter.
rm ?	Wildcard yang mewakili satu karakter.
rmdir -p	Menghapus subdirektori kosong dan direktori induknya.
rmdir -v	Menampilkan informasi bahwa direktori tertentu telah dihapus.

....
sudo apt-get autoremove
sudo apt-get autoremove --purge
sudo apt-get purge php7.*
sudo apt-get autoclean
sudo apt-get autoremove
sudo rm -rf /etc/php/8.2
sudo apt-get purge apache2 php5 libapache2-mod-php5 mysql-server libapache2-mod-auth-mysql php5-mysql phpMyAdmin
sudo rm -rf /etc/apache2; rm -rf /etc/php5; rm -rf /var/lib/mysql; rm etc/mysql 
dpkg-reconfigure phpMyAdmin
sudo apt-get remove phpmyadmin --purge
apt-get autoremove
cd / sudo find -name "php"
cd /usr/local/include/php
ls
sudo rm -rf /usr/local/include/php
find /tmp -ctime +10 -exec rm -rf {} +
sudo find /tmp -type f -ati
del /q /s %systemroot%Prefetch*me +10 -delete
del /q/f/s %TEMP%\*.
dpkg --list | grep linux-image
sudo apt-get purge linux-image-X.X.X-XX-generic
php -v
sudo systemctl stop apache2
sudo service apache2 stop
sudo apt-get purge apache2*
sudo apt-get purge apache2 apache2-utils apache2.2-bin apache2-common
sudo apt-get autoremove --purge
sudo rm -rf /etc/apache2
sudo rm -rf /var/www/html
sudo apt-get autoremove

sudo systemctl enable apache2
sudo systemctl start apache2
sudo systemctl stop apache2
sudo systemctl restart apache2
sudo systemctl status apache2
sudo systemctl is-active apache2
sudo systemctl is-enabled apache2
sudo systemctl is-active apache2
whereis apache2
sudo netstat -tuln | grep :80
sudo rm -rf /etc/apache2
sudo systemctl stop MySQL
sudo apt-get purge mysql-server mysql-client mysql-common mysql-server-core-* mysql-client-core-*
sudo apt-get autoremove --purge
sudo rm -rf /etc/mysql
sudo rm -rf /var/lib/mysql
sudo rm -rf /var/log/mysql
sudo systemctl status mysql
sudo netstat -tuln | grep :3306
sudo apt-get clean
sudo systemctl stop apache2
sudo systemctl stop nginx
sudo apt-get remove --purge php*
sudo apt-get autoremove --purge
=============>
sudo apt remove php8.2
sudo apt remove php8.2-*
sudo apt install php8.2-intl
php -m | grep intl
sudo apt purge php8.2 php8.2-* -y
service php8.2-fpm restart
sudo rm -rf /etc/php/ 
sudo rm -rf /usr/lib/php/ 
sudo nano /etc/php/8.1/fpm/conf.d/60-custom.ini
sudo apt install php8.2-mysql php8.2-mbstring php8.2-xml php8.2-curl
sudo apt purge php8.2 php8.2-* -y
sudo rm -rf /etc/php/ 
sudo rm -rf /usr/lib/php/ 
=============>
sudo apt-get remove --purge php7.4-cli php7.4-fpm php7.4-mysql php7.4-xml php7.4-curl
sudo rm -rf /etc/php
sudo apt purge php* -y
sudo apt autoremove --purge -y
sudo apt autoclean

sudo service apache2 stop
sudo apt-get remove apache2
sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common
sudo apt-get --purge remove apache2 apache2-utils apache2-bin apache2.2-common
sudo rm -rf /etc/apache2
sudo apt-get autoremove
sudo apt-get autoclean
sudo apt-get clean
whereis apache2
systemctl status apache2
whereis apache2
systemctl status apache2
sudo apt-get remove --purge mysql*
sudo apt-get purge mysql*
sudo apt-get autoclean
sudo apt-get dist-upgrade
sudo apt purge php8.2 php8.2-* -y
sudo apt autoremove --purge -y
sudo apt-get purge phpmyadmin		
sudo apt-get purge php
sudo vi clear_temp.sh
sudo apt remove php8.2
sudo apt remove php8.2-*
sudo apt install php8.2-intl
php -m | grep intl
sudo apt purge php8.2 php8.2-* -y
sudo rm -rf /etc/php/ 
sudo rm -rf /usr/lib/php/ 
sudo find /var/log -type f -delete
locate php.ini
locate -i php.INI
locate -c -i php.ini
ls -lh /tmp
sudo rm /var/www/rantobasuki.net/info.php
sudo find /tmp -type f -delete
sudo rm -rf /usr/share/phpMyAdmin
sudo rm /etc/nginx/sites-available/default
sudo rm /etc/apache2/conf-available/phpmyadmin.conf
sudo chmod +x clear_temp.sh
./clear_temp.sh
==dengan cron==
crontab -e
0 0 * * * find /destination-folder-to/ -type d -name '*' -mtime +5 -exec 
0 10 * * * sudo find /tmp -type f -delete >/dev/null 2>&1
0 10 * * * sudo /home/ubuntu/clear_temp.sh >/dev/null 2>&1
rm -rv {} +
==
find /tmp -ctime +10 -exec rm -rf {} +
sudo find /tmp -type f -ati
del /q /s %systemroot%Prefetch*me +10 -delete
del /q/f/s %TEMP%\*.
dpkg --list | grep linux-image
sudo apt-get purge linux-image-X.X.X-XX-generic
rm -d	Menghapus direktori kosong menggunakan perintah rm.
rm -r	Menghapus direktori yang tidak kosong dan isinya.
rm -f	Mengabaikan prompt apa pun saat menghapus file yang dilindungi untuk penulisan (write-protected).
rm -rf	Mengabaikan prompt apa pun saat menghapus folder tidak kosong yang dilindungi untuk penulisan.
rm -i	Menghasilkan prompt sebelum menghapus setiap file.
rm -I	Menghasilkan prompt hanya sekali sebelum menghapus lebih dari tiga file.
rm *	Wildcard yang mewakili banyak karakter.
rm ?	Wildcard yang mewakili satu karakter.
rmdir -p	Menghapus subdirektori kosong dan direktori induknya.
rmdir -v	Menampilkan informasi bahwa direktori tertentu telah dihapus.

===Setting certificate===
sudo apt install certbot python3-certbot-nginx
sudo certbot --nginx --agree-tos --redirect --hsts --staple-ocsp -d pma.example.com --email you@example.com
sudo apt install openssl
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt
sudo openssl dhparam -out /etc/nginx/dhparam.pem 1024
sudo nano /etc/nginx/snippets/self-signed.conf
# Tambahkan konfigurasi snippet untuk sertifikat SSL
ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
ssl_certificate_key /etc/ssl/private/nginx-slfsigned.key;

===Management user ubuntu===
useradd username > centos
adduser username > ubuntu
adduser username sudo
passwd username
sudo usermod -aG sudo ranto
sudo usermod -a -G sudo ranto
sudo usermod -aG group1,group2,group3 username
sudo groupadd groupname
sudo groupdel groupname
sudo usermod -g namagrup username
sudo whoami
Perintah useradd berikut akan membuat user baru bernama bagas dengan grup primer users dan grup sekunder berada di wheel dan developers.
sudo useradd -g users -G wheel,developers bagas
id username
groups username
sudo cat /etc/group |grep subversion
pgrep -lu basuki
cat /etc/issue
cat /etc/lsb-release
pgrep -lu basuki
cat /etc/issue
===MySQL & PHP===
sudo apt install mysql-server
sudo mysql_secure_installation
sudo systemctl start mysql
sudo systemctl enable MySQL
sudo MySQL
use MySQL
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'P@ssw0rd1';
FLUSH PRIVILEGES;
exit
mysql -u root -p
sudo apt install php8.3-fpm php-MySQL
sudo rm -rf /usr/share/phpMyAdmin

CREATE TABLE t_user (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nama VARCHAR(25),	
    tgl_lahir date,
    alamat VARCHAR(100),
    phone varchar(15)
);

SELECT content FROM $table

insert into t_user(nama,tgl_lahir,alamat,phone) values 
('Wardhani','1979/08/02','Yogyakarta','111111111111'),
('Wisnu','2011/07/11','Yogyakarta','222222222222'),
('Indira','2012/12/16','Jakarta','333333333333'),
('Ignatius','1976/10/21','Wonogiri','444444444444'),
('Stefanus','1978/11/15','Semarang','555555555555');

===
sudo MariaDB
mysql> CREATE USER 'adminbaruku'@'localhost' IDENTIFIED BY 'passwordbaruku';
CREATE USER 'ranto'@'localhost' IDENTIFIED BY 'Ranto_123';
CREATE USER 'basuki'@'localhost' IDENTIFIED BY 'Basuki_123';
CREATE USER 'stefanus'@'localhost' IDENTIFIED BY 'Stefanus_123';
CREATE USER 'phpmyadmin'@'localhost' IDENTIFIED BY 'P@ssw0rd2';
GRANT ALL PRIVILEGES ON *.* TO 'basuki'@'localhost' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'phpmyadmin'@'localhost' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'basuki'@'localhost' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'basuki'@'localhost';
GRANT ALL PRIVILEGES ON *.* TO 'nama_user'@'%';
GRANT ALL PRIVILEGES ON db_test.* TO 'ranto'@'localhost';
GRANT SELECT, INSERT, UPDATE ON nama_database.nama_tabel TO 'nama_user'@'localhost';
GRANT SELECT, INSERT, UPDATE ON nama_database.nama_tabel TO 'stefanus'@'localhost';
SHOW GRANTS FOR 'nama_user'@'localhost';
REVOKE SELECT ON nama_database.* FROM 'nama_user'@'localhost';
REVOKE ALL PRIVILEGES ON *.* FROM 'nama_user'@'localhost';
SHOW GRANTS FOR 'user1'@'localhost';
SHOW GRANTS FOR 'nama_user'@'localhost';
SELECT user, host FROM mysql.user;
SHOW GRANTS FOR 'basuki'@'localhost';
mysql> FLUSH PRIVILEGES;
sudo a2disconf phpMyAdmin
FLUSH PRIVILEGES;
SELECT user, host FROM mysql.user;
sudo apt-get remove --purge mysql*
sudo apt-get purge mysql*

sudo apt-get dist-upgrade
sudo apt-get purge phpmyadmin		
sudo apt-get purge php
sudo apt-get autoremove
sudo apt install php php-cli php-fpm php-json php-common php-mysql php-zip php-gd php-mbstring php-curl php-xml php-pear php-bcmath
sudo apt install php8.2 php8.2-cli php8.2-fpm php8.2-mysql php8.2-xml php8.2-json php8.2-common php8.2-gd php8.2-mbstring php8.2-curl php8.2-zip php8.2-pear php8.2-bcmath
===
sudo vi clear_temp.sh
#!/bin/sh
sudo find /tmp -type f -delete
sudo chmod +x clear_temp.sh
./clear_temp.sh
$ crontab -e
0 10 * * * sudo find /tmp -type f -delete >/dev/null 2>&1
0 10 * * * sudo /home/ubuntu/clear_temp.sh >/dev/null 2>&1
sudo df /tmp
sudo df -h /tmp
sudo du -sh /tmp
sudo tree /tmp
sudo tree -- du -h /tmp

===Instal php versi 8.2 & PHPMyAdmin===
sudo apt update && sudo apt upgrade -y
sudo apt install software-properties-common -y 
sudo apt-cache policy software-properties-common
sudo add-apt-repository ppa:ondrej/php
sudo add-apt-repository ppa:ondrej/php
sudo dpkg-reconfigure phpMyAdmin
sudo apt install php8.2
sudo apt install php8.2-fpm
sudo apt update -y
sudo apt-get update
sudo apt install php8.2 php8.2-fpm
systemctl enable php8.2-fpm
sudo apt install php8.2-fpm -y
sudo apt install php8.2-mysql -y
sudo apt install php8.2-mbstring -y
ls -al /etc/php/8.2/fpmql 
sudo apt install php8.1-fpm php8.1-common php8.1-mysql php8.1-xml php8.1-curl php8.1-gd php8.1-imagick php8.1-cli php8.1-dev php8.1-imap php8.1-mbstring php8.1-opcache php8.1-soap php8.1-zip -y
sudo apt install php8.2-common php8.2-mysphp8.2-xml php8.2-xmlrpc php8.2-curl php8.2-gd php8.2-imagick php8.2-cli php8.2-dev php8.2-imap php8.2-mbstring php8.2-opcache 
sudo apt install -y php8.2 php8.2-fpm php8.2-bcmath php8.2-xml php8.2-mysql php8.2-zip php8.2-intl php8.2-ldap php8.2-gd php8.2-cli php8.2-bz2 php8.2-curl php8.2-mbstring php8.2-imagick php8.2-tokenizer php8.2-opcache php8.2-redis php8.2-cgi
sudo apt install php8.2-{common,fpm,mysql,curl,gd,imagick,bcmath,cli,intl,mbstring,soap,xml,zip,unzip,gmp,redis} -y
sudo apt install php8.2-{common,fpm,mysql,curl,gd,imagick,bcmath,cli,intl,mbstring,soap,xml,zip} -y
sudo apt install -y php8.2 php8.2-cli php8.2-fpm php8.2-mysql php8.2-xml php8.2-mbstring php8.2-curl php8.2-zip php8.2-bcmath
sudo nano /etc/php/8.1/fpm/php.ini
sudo nano  /var/www/rantobasuki.net/html/info.php
sudo systemctl enable php8.2-fpm
sudo systemctl start php8.2-fpm
sudo systemctl stop php8.2-fpm
sudo systemctl restart php8.2-fpm
sudo systemctl status php8.2-fpm
sudo service php8.2-fpm status
sudo systemctl start php8.2-fpm
sudo systemctl status php8.2-fpm
sudo apt install php8.2-fpm -y
sudo apt -y install php8.2-fpm
sudo apt install php8.2-snmp php-memcached php8.2-mysql
sudo cd /etc/nginx/conf.d
sudo apt install php8.2
sudo apt install php8.2-fpm
sudo apt install php8.2-{bcmath,fpm,xml,mysql,zip,intl,ldap,gd,cli,bz2,curl,mbstring,pgsql,opcache,soap,cgi}
sudo nano /etc/php/8.1/fpm/php.ini
sudo apt install phpMyAdmin
sudo a2enconf php8.2-fpm
sudo apt purge php8.2*
sudo apt install php8.2-fpm
sudo a2enconf php8.2-fpm
sudo a2disconf php8.2-fpm # When upgrading from an older PHP version
===Menghapus service php, apache2 & mysql===
===
upload_max_filessize = 50M 
post_max_size = 50M 
memory_limit = 512M 
max_execution_time = 3600

===Mengubah versi php===
php-fpm8.2 -v
sudo a2dismod php8.2
sudo a2enmod php8.2
systemctl restart nginx
sudo update-alternatives --config php
sudo update-alternatives --set php /usr/bin/php8.2
sudo update-alternatives --set phpize /usr/bin/phpize8.2
sudo update-alternatives --set php-config /usr/bin/php-config8.2
/etc/php/8.2/cli/php.ini
/etc/php.8.2/fpm/php.ini
sudo nano /etc/php/8.2/fpm/php.ini
PHP FPM: /etc/php/8.2/fpm/php.ini
===
sudo nano rantobasuki.net.conf
sudo nano /etc/php/8.2/fpm/pool.d/www.conf
sudo rm /etc/nginx/sites-available/default
sudo nano /etc/nginx/conf.d/default.conf
php -v
	
sudo nano /etc/nginx/sites-available/rantobasuki.net
sudo nano /etc/nginx/sites-available/default
nginx -t
sudo service nginx restart
sudo systemctl restart nginx
sudo service nginx restart
sudo service nginx status
sudo nano /var/www/html/phpinfo.php
sudo apt-get install php8.2 -y
sudo apt install php8.2 php8.2-fpm php8.2-mysql php8.2-cli php8.2-curl php8.2-mbstring php8.2-xml php8.2-zip (penting)
sudo apt install php8.2-{common,mysql,fpm,xml,cli,mbstring,gd,zip,curl,bcmath}
sudo apt install phpmyadmin php-mbstring php-zip php-gd php-json php-curl -y
sudo apt-get install php8.2-cli php8.2-mysql php8.2-zip php8.2-fpm -y
sudo apt install php8.2-mysql php8.2-mbstring php8.2-xml php8.2-curl
apt-get install php8.2 php8.2-cli php8.2-common php8.2-opcache php8.2-curl php8.2-mbstring php8.2-mysql php8.2-zip php8.2-xml php8.2-gd php8.2-fpm -y
sudo phpenmod mbstring
sudo apt install phpmyadmin -y
sudo systemctl start php8.2-fpm
sudo systemctl enable php8.2-fpm
sudo systemctl status php8.2-fpm
sudo systemctl enable php8.2-fpm
sudo nano /etc/php/8.2/fpm/php.ini
===
upload_max_filesize = 10M
post_max_size = 10M
max_execution_time = 300
max_input_time = 300
memory_limit = 128M
===

sudo nano /etc/nginx/sites-available/default
sudo vim /etc/nginx/sites-available/default
sudo nano /etc/nginx/sites-available/default
sudo nano /var/www/html/info.php
sudo nano /var/www/rantobasuki.net/info.php
sudo nano /etc/nginx/sites-available/default
cd /var/www/html/
sudo nano phpinfo.php
===
<?php
phpinfo();
?>
sudo systemctl restart apache2
===
===
upload_max_filesize = 32M 
post_max_size = 48M 
memory_limit = 256M 
max_execution_time = 600 
max_input_vars = 3000 
max_input_time = 1000
===
sudo service php8.2-fpm restart
sudo systemctl restart apache2
sudo systemctl restart apache2
sudo nano /etc/php/8.2/fpm/pool.d/www.conf
===
user = username 
group = username 
listen.owner = username
listen.group = username
sudo php-fpm8.2 -t 
sudo service php8.2-fpm restart
sudo usermod -a -G www-data nginx
sudo usermod -aG www-data nginx
sudo service php8.2-fpm restart
===
user = www-data
group = www-data
listen = 127.0.0.1:9000

sudo dpkg -l | grep php | tee packages.txt
sudo add-apt-repository ppa:ondrej/php # Press enter when prompted.
sudo apt update
sudo apt install php8.2 php8.2-cli php8.2-{bz2,curl,mbstring,intl}

sudo apt install php8.2-fpm
# OR
# sudo apt install libapache2-mod-php8.2


sudo service apache2 restart
sudo apt install php8.2-fpm
sudo service nginx restart
sudo update-alternatives --config php
sudo apt install php8.2-fpm php-mysql
sudo systemctl restart apache2
sudo apt install php8.2-{mysql,cli,gd,zip}

sudo apt remove php8.2
sudo apt remove php8.2-*

===cara instal database mysql  versi 5.7 di ubuntu 22===
apt update && sudo apt upgrade y
apt install dirmngr ca-certificates software-properties-common apt-transport-https wget
sudo apt install wget -y
sudo mysql_secure_installation
sudo apt install -f mysql-client=5.7* mysql-community-server=5.7* mysql-server=5.7*
sudo phpenmod mbstring
sudo mysql -u root -p
SELECT user, authentication_string, plugin FROM mysql.user;
#buat database
CREATE DATABASE namadatabase;
#buat user
CREATE USER 'namauser'@'localhost' IDENTIFIED BY 'password';
#tambahkan akses user ke database
GRANT ALL PRIVILEGES ON namadatabase.* TO 'namauser'@'localhost';
FLUSH PRIVILEGES;
ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'your_new_password';
CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON newdatabase.* TO 'newuser'@'localhost';
FLUSH PRIVILEGES;
#pilih database nya
use namadatabase;
#import database
source /home/namadomain/backupdb.sql
sudo wget https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb
sudo wget https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb
sudo wget https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb
sudo wget https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb
sudo wget https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb
sudo wget https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb
sudo dpkg -i mysql-apt-config_0.8.22-1_all.deb
sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb
sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb
sudo dpkg -i mysql-apt-config_0.8.15-1_all.deb
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29
apt-get update
sudo dpkg -i mysql-{common,community-client-plugins,community-client-core,community-client,client,community-server-core,community-server,server}_*.deb
gpg --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29
gpg --export --armor 467B942D3A79BD29 | sudo gpg --dearmour -o 
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29
/etc/apt/trusted.gpg.d/mysql.5.7-key.gpg
sudo apt-cache policy mysql-server
sudo apt install -f mysql-client=5.7* mysql-community-server=5.7* mysql-server=5.7*
sudo apt update
sudo apt-get update
sudo apt-key list | grep -A 1 expired
sudo apt-key adv --keyserver keys.gnupg.net --recv-keys 5072E1F5
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29
sudo apt install -f mysql-client=5.7* mysql-community-server=5.7* mysql-server=5.7*
sudo apt install -f mysql-client=5.7* mysql-community-server=5.7* mysql-server=5.7*
sudo apt install -f mysql-client=5.7* mysql-community-server=5.7* mysql-server=5.7*
sudo apt-cache policy mysql-server
sudo systemctl status mysql.service
sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf
sudo apt install mysql-server
sudo systemctl start mysql.service
sudo systemctl start mysql
sudo apt-get install mysql-server 
sudo apt update --allow-insecure-repositories
sudo mysqladmin -p -u sammy version
sudo apt-get install php-fpm php-mysql -y
mysql_secure_installation
systemctl status mysql --no-pager -l
CREATE USER 'test'@'%' IDENTIFIED BY 'test@123';
CREATE USER 'sammy'@'localhost' IDENTIFIED BY 'password';
SET PASSWORD FOR 'phpmyadmin'@'localhost' = PASSWORD([copy and paste the password here])
mysql -u root -p
SET PASSWORD FOR 'root'@'localhost' = PASSWORD('new_password');
CREATE DATABASE namadatabase DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;
CREATE USER 'userdatabase'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON * . * TO 'test'@'%';
GRANT ALL PRIVILEGES ON *.* TO 'test'@'%' WITH GRANT OPTION;
GRANT CREATE, ALTER, DROP, INSERT, UPDATE, INDEX, DELETE, SELECT, REFERENCES, RELOAD ON *.* TO 'sammy'@'localhost' WITH GRANT OPTION;
sudo mysql
use mysql;
SET PASSWORD FOR nama_user@'lokasi_user' = PASSWORD('password_baru');
SET PASSWORD=PASSWORD('the_password')
SET PASSWORD FOR 'nama_user'@'lokasi_user' = ''
SET PASSWORD FOR 'nama_user'@'lokasi_user' ='*nilai hashing';
SET PASSWORD FOR ekonomi_admin@'localhost' = '*F366568C1E05004FD78F38B712C83917196C95D8';
ALTER USER 'tutorial'@'localhost' IDENTIFIED BY 'p4ssw0rd-b4ru';
CREATE USER 'phpmyadmin'@'localhost' IDENTIFIED BY 'supersecretpassword';
SET PASSWORD FOR 'phpmyadmin'@'localhost' = PASSWORD('supersecretpassword');
GRANT ALL PRIVILEGES ON *.* TO 'phpmyadmin'@'localhost' WITH GRANT OPTION;
CREATE USER 'phpmyadmin '@'localhost' IDENTIFIED BY 'password';
ALTER USER 'phpmyadmin'@'localhost' IDENTIFIED BY '<password>';
SET PASSWORD FOR 'phpmyadmin'@'localhost' = PASSWORD('<password>');
SET PASSWORD FOR 'tutorial'@'localhost' = PASSWORD('p4ssw0rd-b4ru');
FLUSH PRIVILEGES;
exit
GRANT ALL ON namadatabase.* TO 'userdatabase'@'localhost';
mysqldump -u root -p  namadatabase > database.sql
mysql -u root -p namadatabase < database.sql
systemctl stop mysql
systemctl start mysql
systemctl restart mysql

FLUSH PRIVILEGES;
mysql> FLUSH PRIVILEGES; 
/etc/mysql/mysql.conf.d/mysqld.cnf 
sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf  
bind-address = 0.0.0.0 
sudo systemctl start mysql.service 
sudo systemctl restart mysql.service
sudo systemctl stop mysql.service
groupadd mysql
useradd -g mysql mysql 
#Extract MySQL yang telah didownload dan pindahkan ke folder /usr/local.
tar xzvf mysql-5.5.62-linux-glibc2.12-x86_64.tar.gz
mv mysql-5.5.62-linux-glibc2.12-x86_64 /usr/local/mysql
cd /usr/local/mysql
chown -R mysql:mysql *
apt install libaio1 
scripts/mysql_install_db --user=mysql	
cp support-files/my-medium.cnf /etc/my.cnf
bin/mysqld_safe --user=mysql &
cp support-files/mysql.server /etc/init.d/mysql.server
bin/mysqladmin -u root password 'rahasia'
ln -s /usr/local/mysql/bin/mysql /usr/local/bin/mysql	
reboot
update-rc.d -f mysql.server defaults
/etc/init.d/mysql.server start
/etc/init.d/mysql.server status
mysql -u root -p	
sudo MySQL
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';
exit
sudo mysql_secure_installation
mysql --version
sudo apt-get remove --purge mysql*
sudo apt-get purge mysql*
sudo apt-get autoremove
sudo apt-get autoclean
sudo apt-get dist-upgrade
sudo systemctl status mysql
=====Setting Certificate SSL pada web server nginx=====
sudo apt update
sudo apt install certbot python3-certbot-nginx
sudo certbot --nginx -d rantobasuki.net -d www.rantobasuki.net
sudo certbot renew --dry-run
sudo systemctl status certbot.timer
sudo mkdir -p /etc/nginx/ssl
sudo cp domain.crt /etc/nginx/ssl/
sudo cp domain.key /etc/nginx/ssl/
sudo cp chain.crt /etc/nginx/ssl/  # Jika ada sertifikat CA
sudo nano /etc/nginx/sites-available/rantobasuki.net
===
server {
    listen 80;
    server_name rantobasuki.net www.rantobasuki.net;
    
    # Redirect HTTP ke HTTPS
    return 301 https://$host$request_uri;
}

===
server {
    listen 443 ssl;
    server_name example.com www.example.com;

    ssl_certificate /etc/nginx/ssl/domain.crt;   # Lokasi sertifikat SSL
    ssl_certificate_key /etc/nginx/ssl/domain.key;  # Lokasi kunci privat
    ssl_trusted_certificate /etc/nginx/ssl/chain.crt;  # (Opsional) Sertifikat CA jika ada
    
    # Pengaturan SSL (Optional, untuk keamanan tambahan)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    
    # Konfigurasi lainnya
    root /var/www/html;
    index index.html index.htm index.php;
    
    location / {
        try_files $uri $uri/ =404;
    }
}

===


=====






























